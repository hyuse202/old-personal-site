---
export interface Props {
  title: string;
  maxThemeIndex?: number;
  theme?: {
    mode: "dark-theme" | "light-theme";
    theme: number;
  } | null;
}
import "~/styles/fonts.css";
import "~/styles/main.css";
import "~/styles/theme.scss";
import BottomNav from "~/components/bottom-nav/index.astro";
import Navbar from "~/components/navbar/index.astro";
import { MAXIMUM_THEME_INDEX } from "~/constants";
import { getThemeCookie } from "~/utils/theme";

const theme_ = getThemeCookie(Astro.request.headers);

const {
  title,
  maxThemeIndex = MAXIMUM_THEME_INDEX,
  theme = theme_,
} = Astro.props as Props;
---

<!DOCTYPE html>
<html
  lang="en"
  data-max-theme-index={maxThemeIndex}
  data-theme={JSON.stringify(theme)}
  class={theme?.mode ?? ""}
  data-theme-index={theme?.theme ?? 1}
>
  <head>
    <meta charset="UTF-8" />
    <title>Hyuse-{title}</title>
    <meta
      content="UI developer interested in design systems and Interfaces."
      name="description"
    />
    <meta content="#FFF" name="theme-color" />
    <meta
      content="width=device-width,initial-scale=1,viewport-fit=cover"
      name="viewport"
    />
    <link rel="icon" href="/static/og.png" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
    />
    <script>
      if (typeof window !== "undefined") {
        const root = document.documentElement;
        const theme = root.getAttribute("data-theme");
        if (theme !== "null") {
          document.cookie = `__theme_nfz=${theme}; SameSite=Lax; Secure; path=/`;
        } else {
          document.cookie = `__theme_nfz=${JSON.stringify({
            mode: "light-theme",
            theme: 0,
          })}; SameSite=Lax; Secure; path=/`;
        }
      }
    </script>
  </head>

  <body>
    <Navbar />
    <main class="flex flex-col px-7 md:px-32 mb-10 sm:mb-0">
      <slot />
    </main>
    <BottomNav />
  </body>
</html>
